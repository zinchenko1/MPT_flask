body{margin:0;padding:0}body .content{width:480px;margin:0 auto}@media screen and (min-width: 1170px){body .content{width:1170px}}body a{text-decoration:none}body li{list-style-type:none}body h6{display:none}body hr{border:none}*{outline:0 !important}::-webkit-scrollbar{width:12px}::-webkit-scrollbar-thumb{border-width:1px 1px 1px 2px;border-color:#777;background-color:#aaa}::-webkit-scrollbar-thumb:hover{border-width:1px 1px 1px 2px;border-color:#555;background-color:#777}::-webkit-scrollbar-track{border-width:0}::-webkit-scrollbar-track:hover{border-left:solid 1px #aaa;background-color:#eee}/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:0.67em 0}figcaption,figure{display:block}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}main{display:block}pre{font-family:monospace, monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace, monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button{overflow:visible}button,select{text-transform:none}button,html [type="button"],[type="reset"],[type="submit"]{-webkit-appearance:button}button::-moz-focus-inner,[type="button"]::-moz-focus-inner,[type="reset"]::-moz-focus-inner,[type="submit"]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type="button"]:-moz-focusring,[type="reset"]:-moz-focusring,[type="submit"]:-moz-focusring{outline:1px dotted ButtonText}input{overflow:visible}[type="checkbox"],[type="radio"]{box-sizing:border-box;padding:0}[type="number"]::-webkit-inner-spin-button,[type="number"]::-webkit-outer-spin-button{height:auto}[type="search"]{-webkit-appearance:textfield;outline-offset:-2px}[type="search"]::-webkit-search-cancel-button,[type="search"]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}fieldset{padding:0.35em 0.75em 0.625em}legend{box-sizing:border-box;display:table;max-width:100%;padding:0;color:inherit;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}details{display:block}summary{display:list-item}menu{display:block}canvas{display:inline-block}template{display:none}[hidden]{display:none}.home{background:url(/static/img/bg_home_2.png) center center;background-size:cover}.home__block{height:640px;background:rgba(21,20,26,0.8)}.home__block header{padding-top:10px;display:flex;flex-direction:row;justify-content:space-between}@media screen and (min-width: 1170px){.home__block header{padding-top:40px}}.home__block header .header_logo{display:flex;flex-direction:row;padding-left:10px}@media screen and (min-width: 1170px){.home__block header .header_logo{padding-left:115px}}.home__block header .header_logo p{opacity:0.4;color:#ffffff;font-family:"Source Sans Pro";font-size:9px;font-weight:400}.home__block header .header_logo span{color:#ffffff;font-family:Quicksand;font-size:24px;font-weight:700;padding-top:6px;padding-left:5px}.home__block header nav{padding-right:5px}@media screen and (min-width: 1170px){.home__block header nav{padding-right:170px}}.home__block header nav ul{display:flex;flex-direction:row}.home__block header nav ul li{margin-right:15px;margin-top:-7px}.home__block header nav ul li a{display:inline-block;color:#ffeb3b;color:#ffffff;line-height:1;text-decoration:none;color:#fffefe;font-family:"Source Sans Pro - Semibold";font-size:20px;font-weight:400;cursor:pointer}.home__block header nav ul li a:after{background-color:#ffeb3b;display:block;content:"";height:2px;width:0%;-webkit-transition:width .3s ease-in-out;-moz--transition:width .3s ease-in-out;transition:width .3s ease-in-out}.home__block header nav ul li a:hover:after,.home__block header nav ul li a:focus:after{width:100%}.home__block__data{display:flex;flex-direction:column;justify-content:center;align-items:center}@media screen and (min-width: 1170px){.home__block__data{display:flex;flex-direction:row;justify-content:space-between;padding-top:40px;padding-right:150px}}.home__block__data__introducing{width:480px;text-align:center}@media screen and (min-width: 1170px){.home__block__data__introducing{width:550px;padding-left:115px;text-align:unset}}.home__block__data__introducing h3{color:#ffeb3b;font-family:"Source Sans Pro";font-size:14px;font-weight:700;letter-spacing:1.4px;text-transform:uppercase;text-align:unset}.home__block__data__introducing h2{color:#ffffff;font-family:"Source Sans Pro - Semibold";font-size:22px;font-weight:600;margin:10px 0 0px 0}@media screen and (min-width: 1170px){.home__block__data__introducing h2{font-size:48px;margin:35px 0 0px 0}}.home__block__data__introducing p{color:#ffeb3b;font-size:11px;font-family:"Source Sans Pro";font-weight:700;letter-spacing:1.4px;margin-bottom:75px;line-height:25px}@media screen and (min-width: 1170px){.home__block__data__introducing p{font-size:18px}}.home__block__data .form{margin-top:-70px;width:300px;padding-left:5px;padding-right:5px;padding-bottom:5px;background:rgba(255,255,255,0.4);border-radius:10px}@media screen and (min-width: 1170px){.home__block__data .form{margin-top:15px;padding-left:15px;padding-right:15px;padding-bottom:15px}}.home__block__data .form p{color:#fbe200;font-family:"Source Sans Pro - Semibold";text-align:center;font-size:22px;font-weight:600;margin-top:15px;margin-bottom:-10px}@media screen and (min-width: 1170px){.home__block__data .form p{color:#fbe200;font-family:"Source Sans Pro - Semibold";font-size:28px;font-weight:600;margin-top:15px;margin-bottom:-10px}}.home__block__data .form form{display:flex;flex-direction:column}.home__block__data .form form input{padding-left:10px;margin-top:20px;height:40px;border-radius:20px;border:2px solid #858383;margin-bottom:-10px}@media screen and (min-width: 1170px){.home__block__data .form form input{height:50px}}.home__block__data .form form button{width:50%;border-radius:20px;margin:0 auto;margin-top:30px;border:2px solid gray;padding:10px 20px;font-family:"Source Sans Pro"}.home__block__data .form form button:hover{border:2px solid #ffeb3b;background:rgba(255,235,59,0.5);transition-duration:1s;color:#ffffff}.home__block__data .aler{width:300px;height:200px;padding-left:15px;padding-right:15px;padding-bottom:15px;padding-top:20px;background:rgba(255,255,255,0.4);border-radius:10px;font-family:"Source Sans Pro";font-size:110px;color:#fbe200;text-align:center;vertical-align:center;padding-top:80px;margin-top:45px}.block_1-btn{margin-left:25px;padding:10px 20px;border:2px solid #ffeb3b;font-family:"Source Sans Pro";border-radius:20px;color:#ffffff;margin-left:50px;margin-top:15px}@media screen and (max-width: 1100px){.block_1-btn{display:none}}.block_1-btn:hover{background:rgba(255,235,59,0.5);transition-duration:1s;color:#ffffff}footer{background:#15141a;margin-top:-15px;padding:25px 0 25px 0}footer .footer{display:flex;flex-direction:row;justify-content:space-around}footer .footer__img a img{margin-top:10px;margin-right:10px}footer .footer p{color:#444348;font-family:"Source Sans Pro - Semibold";font-size:14px;font-weight:400}.task{padding:20px 0 30px 0;background:#c3bfbf}@media screen and (min-width: 1170px){.task{padding:40px 0 40px 0}}.task__block{display:flex;flex-direction:column;justify-content:center;align-items:center}.task__block__item{width:450px;background:#ffffffb9;margin-top:10px;border-radius:20px;text-align:center;padding:5px 5px 5px 5px;font-family:"Source Sans Pro - Semibold";font-size:18px;font-weight:600}@media screen and (min-width: 1170px){.task__block__item{width:800px;font-size:22px}}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
